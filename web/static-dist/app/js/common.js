!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var parentJsonpFunction=window.webpackJsonp;window.webpackJsonp=function(chunkIds,moreModules){for(var moduleId,chunkId,i=0,callbacks=[];i<chunkIds.length;i++)chunkId=chunkIds[i],installedChunks[chunkId]&&callbacks.push.apply(callbacks,installedChunks[chunkId]),installedChunks[chunkId]=0;for(moduleId in moreModules)modules[moduleId]=moreModules[moduleId];for(parentJsonpFunction&&parentJsonpFunction(chunkIds,moreModules);callbacks.length;)callbacks.shift().call(null,__webpack_require__);if(moreModules[0])return installedModules[0]=0,__webpack_require__(0)};var installedModules={},installedChunks={app:0};__webpack_require__.e=function(chunkId,callback){if(0===installedChunks[chunkId])return callback.call(null,__webpack_require__);if(void 0!==installedChunks[chunkId])installedChunks[chunkId].push(callback);else{installedChunks[chunkId]=[callback];var head=document.getElementsByTagName("head")[0],script=document.createElement("script");script.type="text/javascript",script.charset="utf-8",script.async=!0,script.src=__webpack_require__.p+window.webpackManifest[chunkId],head.appendChild(script)}},__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="/static-dist/"}({"90cae9ba65e5a9cc6a05":function(module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var waterfall=function(parent,pin){var $aPin=$(".course-list > div"),iPinW=$aPin.eq(0).width();console.log("iPinW"+iPinW);var num=Math.floor($(".course-list").width()/iPinW);console.log("num"+num);var pinHArr=[];$aPin.each(function(index,value){var pinH=$aPin.eq(index).height();if(index<num)pinHArr[index]=pinH,console.log("pinHArr"+pinHArr);else{var minH=Math.min.apply(null,pinHArr);console.log("minH"+minH);var minHIndex=$.inArray(minH,pinHArr);console.log("minHIndex"+minHIndex),$(value).css({position:"absolute",top:minH+15,left:$aPin.eq(minHIndex).position().left}),pinHArr[minHIndex]+=$aPin.eq(index).height()+15}})};exports["default"]=waterfall}});